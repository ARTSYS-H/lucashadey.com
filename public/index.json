[{"content":"Salut et bienvenue sur mon blog! Je m’appelle Lucas Hadey et j’ai 26 ans. Passionné par l’univers de l’administration système et du DevOps, j’aime partager mes connaissances et découvertes à travers ce blog.\nCompétences # Je maîtrise une variété de technologies et outils que j\u0026rsquo;ai développées au fil des ans, ce qui me permet de m\u0026rsquo;adapter à différents environnements et projets. Voici un aperçu de mes compétences :\nProgrammation et Scripting: Bash, Go Technologies et frameworks: API REST, NodeJS, FFmpeg Base de données: MongoDB Systèmes d\u0026rsquo;exploitation: Linux: Ubuntu, Debian-based Conteneurisation: Docker, Docker-Compose, Snap Outils et Applications: Pix4D, AliceVision Meshroom Blogging: Hugo Passions et Loisirs # Quand je ne suis pas plongé dans le code ou en train de configurer des systèmes, je suis un grand amateur de drones FPV. Que ce soit pour le freestyle ou le racing, j\u0026rsquo;adore construire, paramétrer et piloter mes drones. C\u0026rsquo;est une passion qui m\u0026rsquo;apporte beaucoup de plaisir et de défis techniques.\nContact # Vous pouvez me retrouver sur :\nGitHub Twitter et Reddit Mail Merci de votre visite et n\u0026rsquo;hésitez pas à me contacter pour toute question ou collaboration !\n","date":"6 avril 2025","externalUrl":null,"permalink":"/about/","section":"Lucas Hadey","summary":"","title":"A Propos","type":"page"},{"content":"","date":"6 avril 2025","externalUrl":null,"permalink":"/","section":"Lucas Hadey","summary":"","title":"Lucas Hadey","type":"page"},{"content":" Voici ce qui m\u0026rsquo;occupe en ce moment. Quoi ? \u0026#x1f4da; Lecture # Planètes de Renaud Jesionek # En tant que grand fan de science-fiction, j\u0026rsquo;ai récemment pris beaucoup de plaisir à redécouvrir les \u0026ldquo;mondes\u0026rdquo; de la science-fiction à travers des œuvres captivantes. J\u0026rsquo;ai relu \u0026ldquo;Planètes\u0026rdquo; de Renaud Jesionek, un ouvrage qui m\u0026rsquo;a replongé dans l\u0026rsquo;univers fascinant de la SF.\nPlus d'infos 2001 Nights de Yukinobu Hoshino # C\u0026rsquo;est sans doute ma grande découverte récente, 2001 Nights de Yukinobu Hoshino est une série de mangas qui explore des thèmes profonds et variés à travers des récits courts mais percutants. Chaque histoire est une véritable invitation au voyage, mêlant habilement science-fiction et réflexion philosophique. Ces lectures m\u0026rsquo;ont rappelé pourquoi j\u0026rsquo;aime tant ce genre, avec ses possibilités infinies et ses questionnements sur notre avenir.\nPlus d'infos \u0026#x1f3ac; Cinéma et Séries # En ce moment, je me replonge avec enthousiasme dans Stargate, ma série préférée. Revoir cette série est pour moi une véritable madeleine de Proust, me rappelant des souvenirs d\u0026rsquo;épisodes captivants et d\u0026rsquo;intrigues passionnantes. J\u0026rsquo;apprécie particulièrement l\u0026rsquo;humour et l\u0026rsquo;histoire de SG-1, même si j\u0026rsquo;apprécie tout autant SGA ou SGU. Parallèlement, j\u0026rsquo;ai récemment découvert les films de Satoshi Kon, dont le style visuel unique et les thèmes profonds m\u0026rsquo;ont immédiatement captivé. \u0026ldquo;Paprika\u0026rdquo; est sans doute celui qui m\u0026rsquo;a le plus marqué, avec son exploration fascinante des rêves et de la réalité. Ces visionnages m\u0026rsquo;ont donné envie d\u0026rsquo;explorer davantage le cinéma d\u0026rsquo;animation et les œuvres qui repoussent les limites de la narration visuelle.\n\u0026#x1f3ae; Jeux Vidéo # Récemment, j\u0026rsquo;ai découvert le jeu Ixion et je l\u0026rsquo;ai énormément apprécié. Ce jeu de gestion et de stratégie nous place à la tête d\u0026rsquo;une station spatiale, la Tiqqun, en quête d\u0026rsquo;une nouvelle planète habitable pour l\u0026rsquo;humanité. Ce qui m\u0026rsquo;a particulièrement plu, c\u0026rsquo;est la difficulté bien équilibrée : ni trop dure, ni trop facile, ce qui rend le gameplay très agréable.\nL\u0026rsquo;histoire est captivante et bien intégrée, avec des choix narratifs qui influencent le déroulement du jeu. La gestion des ressources, la recherche technologique, et les interactions avec les différentes factions à bord de la station ajoutent une profondeur stratégique qui m\u0026rsquo;a tenu en haleine tout au long de l\u0026rsquo;aventure. Les graphismes et l\u0026rsquo;ambiance sonore contribuent également à l\u0026rsquo;immersion dans cet univers futuriste.\nCependant, la difficulté m\u0026rsquo;a parfois amené à perdre et à recommencer, ce qui est de plus en plus rare dans ce genre de jeux. Cette expérience a ajouté une dimension de défi qui rend la fin du jeu d\u0026rsquo;autant plus satisfaisante. Si tu es fan de jeux de gestion avec une bonne dose de narration, je te recommande vivement d\u0026rsquo;essayer Ixion !\n","date":"5 avril 2025","externalUrl":null,"permalink":"/now/","section":"Lucas Hadey","summary":"","title":"Now","type":"page"},{"content":"","date":"22 juin 2024","externalUrl":null,"permalink":"/tags/linux/","section":"Tags","summary":"","title":"Linux","type":"tags"},{"content":"","date":"22 juin 2024","externalUrl":null,"permalink":"/tags/linuxserver/","section":"Tags","summary":"","title":"LinuxServer","type":"tags"},{"content":"","date":"22 juin 2024","externalUrl":null,"permalink":"/tags/nginx/","section":"Tags","summary":"","title":"Nginx","type":"tags"},{"content":" Qu\u0026rsquo;est-ce que Nginx ? # Nginx (prononcé \u0026ldquo;engine-X\u0026rdquo;) est un serveur web et un proxy inverse très perfomant, connu pour sa stabilité, sa riche pallete de fonctionnalités, sa configuration simple et sa faible consommation de ressources. Utilisé par de nombreux site web à grande échelle, Nginx est capable de gérer des milliers de connexions simultanées grâce à son architecture événementielle.\nLogo de Nginx Pourquoi utiliser Nginx ? # Nginx est particulièrement apprécié pour les raisons suivants :\nPerformance et Scalabilité: Nginx peut gérer un grand nombre de connexions simultanées avec une utilisation minimale de la mémoire. Flexibilité: Il peut servir des fichiers statiques, agir en tant que reverse proxy pour des applications web, et bien plus encore. Sécurité: Nginx offre de nombreuses fonctionnalités pour sécuriser votre serveur web. Facilité de configuration: Sa syntaxe de configuration est simple et intuitive. Utilisation de Nginx pour servir des fichiers statiques # Installation de Nginx # Sur la plupart des distributions Linux, l\u0026rsquo;installation de Nginx est simple. Sur une distribution basée sur Debian (comme Ubuntu), vous pouvez utilisez les commandes suivantes:\nsudo apt update sudo apt install nginx Configuration de Nginx pour servir des fichiers statiques # Une fois installé, la configuration de Nginx pour servir des fichiers statiques est relativement simple. Voici un exemple de configuration de base:\nserver { listen 80; server_name exemple.com; location / { root /var/www/html; index index.html index.htm; } } Dans cet exemple:\nlisten 80; indique à Nginx d\u0026rsquo;écouter sur le port 80 (HTTP). server_name exemple.com; spécifie le nom de domaine pour lequel cette configuration est applicable. location / { ... } définie le répertoire racine pour les fichiers statiques (/var/www/html) et les fichiers d\u0026rsquo;index (index.html ou index.htm). Pour appliquer cette configuration, sauvegardez-la dans un fichier dans le répertoire /etc/nginx/sites-available (par exemple exemple.com), puis créez un lien symbolique vers ce fichier dans le répertoire /etc/nginx/sites-enabled:\nsudo ln -s /etc/nginx/sites-available/exemple.com /etc/nginx/sites-enabled/ Enfin, testez la configuration et redémarrez Nginx:\nsudo nginx -t sudo systemctl restart nginx Utilisation de Nginx en tant que proxy pour une application Node.js # Configuration de l\u0026rsquo;application Node.js # Supposons que vous avez une application Node.js fonctionnant sur le port 3000. Voici un exemple de fichier server.js:\nconst express = require(\u0026#39;express\u0026#39;); const app = express(); app.get(\u0026#39;/\u0026#39;, (req, res) =\u0026gt; { res.send(\u0026#39;Hello World!\u0026#39;); }); app.listen(3000, () =\u0026gt; { console.log(\u0026#39;Server is running on http://localhost:3000\u0026#39;); }); Configuration de Nginx en tant que proxy inverse # Pour configurer Nginx en tant que proxy inverse pour cette application, vous pouvez utiliser la configuration suivante:\nserver { listen 80; server_name exemple.com; location / { proxy_pass http://localhost:3000; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; } } Dans cette configuration:\nproxy_pass http://localhost:3000; indique à Nginx de rediriger toutes les requêtes vers le port 3000 où votre application Node.js est en cours d\u0026rsquo;exécution. Les directives proxy_set_header sont utilisées pour transmettre les en-têtes HTTP originaux au serveur Node.js. Pour appliquer cette configuration, sauvegardez-la dans un fichier dans le répertoire /etc/nginx/sites-available/ (par exemple, exemple.com), créez un lien symbolique, testez la configuration, et redémarrez Nginx comme précédement.\nPourquoi utiliser Nginx en tant que proxy pour une application Node.js ? # Utiliser Nginx comme proxy inverse pour une application Node.js présente plusieurs avantages:\nAmélioration des Performances: Nginx est capable de gérer de nombreuses connexions simultanées avec une faible empreinte mémoire, ce qui permet de décharger votre application Node.js des tâche de gestion des connexions et de se concentrer sur le traitement des requêtes. Sécurité: Nginx peut filtrer et gérer les requêtes malveillantes avant qu\u0026rsquo;elles n\u0026rsquo;atteignent votre application, ajoutant ainsi une couche supplémentaire de sécurité. Gestion des Erreurs et Redondance: En de défaillance de votre application, Nginx peut servir des pages d\u0026rsquo;erreur personnalisées, rediriger les trafic vers des serveurs de secours, ou gérer des scénarios de reprise. Mise en Cache: Nginx peut mettre en cache les réponses de votre application, ce qui améliore les temps de réponse pour les requêtes répétitives. Test et Dépannage # Pour vérifier que votre configuration fonctionne correctement, ouvrez un navigateur web et accédez à http://exemple.com. Vous devriez voir le message \u0026ldquo;Hello World!\u0026rdquo; de votre application Node.js.\nSi vous rencontrez des problèmes, consultez les logs d\u0026rsquo;erreurs de Nginx (généralement situés dans /var/log/nginx/error.log) et de votre application Node.js.\nSchéma de Proxy Inverse # Voici un schéma illustrant comment Nginx agit en tant que proxy inverse pour une application Node.js:\nSchéma de proxy inverse Configuration de plusieurs serveurs Nginx # Nginx permet de configurer plusieurs serveurs simultanément, que ce soit pour servir des fichiers statiques ou pour agir en tant que proxy inverse. Voici un exemple de configuration où Nginx sert à la fois des fichiers statiques et agit en tant que proxy pour une application Node.js.\nExemple de configuration # # Serveur pour les fichiers statiques server { listen 80; server_name static.exemple.com; location / { root /var/www/static; index index.html index.htm; } } # Serveur proxy pour l\u0026#39;application Node.js server { listen 80; server_name app.exemple.com; location / { proxy_pass http://localhost:3000; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; } } Structure de Répertoire pour Plusieurs Serveurs # Voici un exemple de structure de répertoires pour les deux serveurs:\n/var/www/static/ ├── index.html └── images/ └── logo.png /var/www/app/ └── (application Node.js) Configuration Supplémentaire # Nginx offre de nombreuses autres options de configuration pour affiner les performances et la sécurité de vos serveurs:\nCompression gzip # Vous pouvez activer la compression gzip pour réduire la taille des réponse HTTP:\nhttp { gzip on; gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript; } Mise en cache des fichiers statiques # Pour améliorer les performances, vous pouvez configurer la mise en cache des fichiers statiques:\nlocation / { root /var/www/static; index index.html index.htm; expires 30d; add_header Cache-Control \u0026#34;public, no-transform\u0026#34;; } Limitation du débit # Pour limiter le débit des connexions afin de prévenir les abus:\nhttp { limit_req_zone $binary_remote_addr zone=mylimit:10m rate=1r/s; server { location / { limit_req zone=mylimit burst=5; } } } Redirection HTTP vers HTTPS # Pour forcer les utilisateurs à utiliser une connexion sécurisée:\nserver { listen 80; server_name exemple.com; return 301 https://$host$request_uri; } server { listen 443 ssl; server_name exemple.com; ssl_certificate /etc/nginx/ssl/exemple.com.crt; ssl_certificate_key /etc/nginx/ssl/exemple.com.key; location / { root /var/www/html; index index.html index.htm; } } Sécurisation des en-têtes HTTP # Pour ajouter des en-têtes de sécurité HTTP:\nserver { listen 80; server_name exemple.com; location / { root /var/www/html; index index.html index.htm; } add_header X-Content-Type-Options nosniff; add_header X-Frame-Options \u0026#34;SAMEORIGIN\u0026#34;; add_header X-XSS-Protection \u0026#34;1; mode=block\u0026#34;; } Conclusion # Nginx est un outil puissant et flexible, essentiel. Que ce soit pour servir des fichiers statiques ou agir en tant que proxy inverse pour des applications web, Nginx offre une solution efficace et robuste. En maîtrisant Nginx, vous pouvez améliorer considérablement les performances et la sécurité de vos services web.\nJ\u0026rsquo;espère que cet article vous a aidé à mieux comprendre comment utiliser Nginx dans différents scénarios.\n","date":"22 juin 2024","externalUrl":null,"permalink":"/posts/nginx/nginx/","section":"Posts","summary":"","title":"Nginx: Serveur de Fichier Statiques et Proxy pour Applications Node.js","type":"posts"},{"content":"","date":"22 juin 2024","externalUrl":null,"permalink":"/tags/nodejs/","section":"Tags","summary":"","title":"NodeJS","type":"tags"},{"content":"","date":"22 juin 2024","externalUrl":null,"permalink":"/posts/","section":"Posts","summary":"","title":"Posts","type":"posts"},{"content":"","date":"22 juin 2024","externalUrl":null,"permalink":"/tags/reverseproxy/","section":"Tags","summary":"","title":"ReverseProxy","type":"tags"},{"content":"","date":"22 juin 2024","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","date":"22 juin 2024","externalUrl":null,"permalink":"/tags/webserver/","section":"Tags","summary":"","title":"WebServer","type":"tags"},{"content":"Neovim est un éditeur de texte incroyablement puissant, mais son véritable potentiel se dévoile lorsqu\u0026rsquo;il est personnalisé et étendu avec des plugins. Cependant, la configuration initiale de Neovim peut être intimidante, surtout pour les nouveaux utilisateurs. C\u0026rsquo;est là que kickstart.nvim entre en jeu. Dans cet article, nous explorons comment kickstart.nvim peut transformer votre expérience Neovim en quelques étapes simples.\nLogo de NeoVim Qu\u0026rsquo;est-ce que kickstart.nvim ? # Kickstart.nvim est un modèle de configuration conçu pour aider les utilisateurs à démarrer rapidement avec Neovim. Il fournit une base solide avec une configuration par défaut bien pensée, permettant aux utilisateurs de se concentrer sur l\u0026rsquo;écriture de code sans se perdre dans les méandres de la configuration de l\u0026rsquo;éditeur.\nPrincipales caractéristiques de kickstart.nvim : # Configuration Prête à l\u0026rsquo;Emploi : Kickstart.nvim offre une configuration par défaut qui inclut les paramètres les plus couramment utilisés, vous permettant de commancer à coder immédiatement. Plugins Essentiels Inclus : Il vient préconfiguré avec une sélection de plugins populaires pour améliorer votre productivité. Extensible et Personnalisable : Même si la configuration par défaut est robuste, kickstart.nvim est facile à modifier pour répondre à vos besoins spécifiques. Documenté et Commenté : Le fichier de configuration est bien commenté, ce qui facilite la compréhension et l\u0026rsquo;adaptation de chaque paramètre. Ready pour LSP : Intégration avec Mason.nvim pour une gestion facile des serveurs de langage (LSP). Gestionnaire de Plugins Lazy.nvim : Utilise lazy.nvim pour une gestion des plugins rapide et efficace. Installation de kickstart.nvim # L\u0026rsquo;installation de kickstart.nvim est simple et rapide. Voici les étapes pour le mettre en place :\nPrérequis # Assurez-vous d\u0026rsquo;avoir les dépendances suivantes installées sur votre système :\ngit make unzip C Compiler (gcc) ripgrep Nerd Font (optionnel mais recommandé pour une meilleur expérience visuelle) Sur un système basé sur Debian, vous pouvez les installer avec :\nsudo apt update sudo apt install make gcc ripgrep unzip git Pour installer une Nerd Font, vous pouvez visiter nerdfonts.com et suivre les instructions pour votre système d\u0026rsquo;exploitation.\nInstallation de Neovim # Assurez-vous que Neovim est installé sur votre système. Vous pouvez le télécharger depuis neovim.io.\nsudo apt update sudo apt install neovim Téléchargement de kickstart.nvim # Clonez le dépôt kickstart.nvim depuis GitHub :\ngit clone https://github.com/nvim-lua/kickstart.nvim.git ~/.config/nvim Lancement de Neovim # Ouvrez Neovim et laissez-le installer les plugins définis dans le fichier de configuration.\nnvim Plugins Inclus # Kickstart.nvim inclut une sélection de plugins essentiels pour améliorer votre productivité dès le départ :\nTelescope.nvim: Un puissant outil de recherche et de navigation. nvim-treesitter: Fournit une analyse syntaxique avancée pour un meilleur surlignage et édition. Lualine.nvim: Une barre de statut configurable et élégante. Gitsigns.nvim: Intégration Git pour afficher les changements dans les fichiers. Mason.nvim: Gestionnaire de serveurs de langage (LSP) pour une intégration facile et rapide. lazy.nvim: Gestionnaire de plugins rapide et efficace. Menu de lazy.nvim Pourquoi choisir kickstart.nvim ? # Kickstart.nvim est idéal pour les utilisateurs qui veulent tirer le meilleur de Neovim sans passer des heures à configurer leur éditeur. Il offre un équilibre parfait entre simplicité et fonctionnalité, avec des options de personnalisation pour ceux qui veulent aller plus loin. De plus, il est régulièrement mis à jour pour s\u0026rsquo;assurer qu\u0026rsquo;il reste compatible avec les dernières versions de Neovim et les plugins populaires.\nLes Keymaps initiale de kickstart.nvim sont probablement les meilleurs et les plus intelligentes que j\u0026rsquo;ai vue au travers de mes essais de plusieurs distributions et scripts de départ pour Neovim.\nConclusion # Kickstart.nvim est une excellente porte d\u0026rsquo;entrée pour quiconque souhaite explorer le monde de Neovim sans se laisser submerger par les configurations complexes. Que vous soyer un débutant ou un utilisateur expérimenté cherchant à rationaliser votre environnement de développement, kickstart.nvim vous offre une base solide sur laquelle construire.\nN\u0026rsquo;attendez plus pour améliorer votre flux de travail avec Neovim. Essayez kickstart.nvim dès aujourd\u0026rsquo;hui et découvrez à quel point la configuration de votre éditeur peut être simple et agréable.\nJe recommande également l\u0026rsquo;excellente Vidéo de TJ DeVries qui vous apportera de bon éléments sur Kickstart.nvim.\nEn espérant que cet article vous aidera à mieux comprendre et à tirer parti de kickstart.nvim pour une expérience Neovim améliorée !\n","date":"15 juin 2024","externalUrl":null,"permalink":"/posts/kickstart-nvim/kickstart-nvim/","section":"Posts","summary":"","title":"Améliorez votre expérience NeoVim avec kickstart.nvim","type":"posts"},{"content":"","date":"15 juin 2024","externalUrl":null,"permalink":"/tags/code/","section":"Tags","summary":"","title":"Code","type":"tags"},{"content":"","date":"15 juin 2024","externalUrl":null,"permalink":"/tags/coding/","section":"Tags","summary":"","title":"Coding","type":"tags"},{"content":"","date":"15 juin 2024","externalUrl":null,"permalink":"/tags/ide/","section":"Tags","summary":"","title":"IDE","type":"tags"},{"content":"","date":"15 juin 2024","externalUrl":null,"permalink":"/tags/neovim/","section":"Tags","summary":"","title":"NeoVim","type":"tags"},{"content":"","date":"15 juin 2024","externalUrl":null,"permalink":"/tags/tools/","section":"Tags","summary":"","title":"Tools","type":"tags"},{"content":"Dans le monde des éditeurs de texte, NeoVim s\u0026rsquo;est rapidement imposé comme une alternative moderne et améliorée à Vim. Conçu pour les développeurs par des développeurs, NeoVim offre une expérience de codage puissante et extensible. Voici pourquoi vous devriez envisager de l\u0026rsquo;adopter.\nLogo de NeoVim Qu\u0026rsquo;est-ce que NeoVim ? # NeoVim est un fork de Vim, un éditeur de texte bien connu pour sa légèreté et son efficacité. L\u0026rsquo;objectif de NeoVim est de remédier aux limitations de Vim tout en conservant ses atouts majeurs. Avec une architecture repensée, NeoVim améliore la performance, la modularité et l\u0026rsquo;extensibilité.\nLes Avantages de NeoVim # Modernisation de l\u0026rsquo;Architecture: NeoVim a été conçu avec une architecture asynchrone, ce qui permet d\u0026rsquo;exécuter des plugins et des scripts sans bloquer l\u0026rsquo;éditeur. Cela améliore considérablement la réactivité, surtout pour les projets de grande envergure.\nExtensibilité Accrue: Grâce à une API remaniée et à la possibilité d\u0026rsquo;écrire des plugins dans n\u0026rsquo;importe quel langage de programmation (comme Lua, Python, et bien d\u0026rsquo;autres), NeoVim ouvre la porte à une personnalisation profonde et à l\u0026rsquo;ajout de fonctionnalités avancées.\nInterface Utilisateur Améliorée: NeoVim prend en charge des interfaces graphiques multiples, permettant aux utilisateurs de choisir leur environnement de travail préféré. Des projets comme nvim-qt ou neovide offrent des interfaces graphiques modernes tout en conservant la puissance de l\u0026rsquo;éditeur en ligne de commande.\nInterface graphique de NeoVim avec Neovide Communauté Active: La communauté NeoVim est dynamique et en pleine croissance. De nombreux plugins et extensions sont développés et partagés régulièrement, offrant une vaste bibliothèque de ressources pour améliorer et personnaliser votre environnement de codage.\nCompatibilité avec Vim: NeoVim est entièrement compatible avec Vim. Cela signifie que si vous êtes déjà un utilisateur de Vim, vous pouvez passer à NeoVim sans perdre vos habitudes ni vos configurations existantes. Toutes vos commandes et vos plugins Vim continueront de fonctionner.\nPourquoi Choisir NeoVim ? # Performance: Pour ceux qui travaillent sur de gros projets, la performance asynchrone de NeoVim est un atout majeur. Flexibilité: Que vous soyez un débutant ou un expert, NeoVim s\u0026rsquo;adapte à vos besoins grâce à ses capacités de personnalisation. Innovation: Avec une communauté active, NeoVim est en constante évolution, intégrant rapidement les nouvelles technologies et pratiques de développement. Conclusion # NeoVim représente l\u0026rsquo;avenir des éditeurs de texte pour les développeurs. Avec ses améliorations architecturales, son extensibilité et sa compatibilité, il offre une expérience utilisateur incomparable. Que vous soyez un utilisateur de Vim à la recherche de quelque chose de plus moderne ou un nouveau venu cherchant un éditeur puissant, NeoVim est un excellent choix. Essayez-le et découvrez comment il peut transformer votre façon de coder.\n","date":"7 juin 2024","externalUrl":null,"permalink":"/posts/neovim/neovim/","section":"Posts","summary":"","title":"NeoVim: Un Éditeur de Texte Moderne et Puissant","type":"posts"},{"content":"","date":"20 mai 2024","externalUrl":null,"permalink":"/tags/files/","section":"Tags","summary":"","title":"Files","type":"tags"},{"content":"","date":"20 mai 2024","externalUrl":null,"permalink":"/tags/magic-wormhole/","section":"Tags","summary":"","title":"Magic-Wormhole","type":"tags"},{"content":"","date":"20 mai 2024","externalUrl":null,"permalink":"/tags/ssh/","section":"Tags","summary":"","title":"Ssh","type":"tags"},{"content":"","date":"20 mai 2024","externalUrl":null,"permalink":"/tags/wormhole/","section":"Tags","summary":"","title":"Wormhole","type":"tags"},{"content":"Né de la nécessité de partager des informations sensibles de manière sécurisée, WormHole offre une approche unique et cryptographiquement solide. En tant qu\u0026rsquo;administarteur système, comprendre et maîtriser WormHole n\u0026rsquo;est pas seulement un atout, mais une nécessité dans notre quête incessante de sécurité et d\u0026rsquo;efficacité.\nInstallation du Client # Après avoir compris l\u0026rsquo;importance cruciale de WormHole dans la sécurisation des transferts de secrets, il est temps de passer à la pratique : installer et configurer WormHole sur votre système.\npip install magic-wormhole --user ou pipx install magic-wormhole Cette commande installe la dernière version de Wormhole disponible dans les dépôts officiels.\nTransfert de Fichiers Sécurisé avec Wormhole # Après avoir installé WormHole, nous sommes prêts à explorer son utilisation la plus courante : le transfert sécurisé de fichiers. Cette fonctionnalité est particulièrement utile dans les opérations quotidiennes, où le partage rapide et sécurisé de fichiers est une nécessité.\nEnvoyer un Fichier # Pour envoyer un fichier, la commande est simple et directe. Voici comment procéder :\nwormhole send /tmp/airflow-1.png Sending 87.0 kB file named \u0026#39;airflow-1.png\u0026#39; Wormhole code is: 78-insurgent-stagnate On the other computer, please run: wormhole receive 78-insurgent-stagnate Lorsque vous exécutez cette commande, WormHole génère un code secret, également appelé \u0026ldquo;Wormhole code\u0026rdquo;. Ce code est à communiquer au destinataire pour qu\u0026rsquo;il puisse recevoir le fichier.\nRecevoir un Fichier : De l\u0026rsquo;autre côté, le destinataire utilisera ce code pour recevoir le fichier. La commande pour le destinataire est tout aussi simpple :\nwormhole receive 78-insurgent-stagnate Il est important de souligner que la sécurité offerte par WormHole est robuste. Le code secret est une mesure de sécurité supplémentaire, s\u0026rsquo;assurant que seul le destinataire prévu peut accéder au fichier envoyé. De plus, tout le processus est chiffré de bout en bout, garantissant que vos données restent privées et sécurisées pendant le transfert.\nEnvoi de texte # La procédure pour envoyer du texte est aussi simple que celle pour les fichiers. Supposons que vous vouliez envoyer une commande sécurisée ou un snippet de code. Voici comment procéder :\nwormhole send --text \u0026#34;Votre texte ici\u0026#34; Partage de clé ssh # Dans le monde du DevOps, le partage sécurisé de clés SSH est une tâche essentielle. Magic WormHole propose des commandes spécifiques pour simplifier ce processus : wormhole ssh invite et wormhole ssh accept. Ces commandes offrent une méthode sécurisée et efficace pour échanger des clés publiques SSH.\nLorsque vous souhaitez autorisez un nouvelle utilisateur sur votre serveur, la commande wormhole ssh invite est un moyen rapide et sûr de le faire. Voici comment l\u0026rsquo;utiliser :\nwormhole ssh invite Now tell the other user to run: wormhole ssh accept 3-tambourine-repay Cette commande ajoute la clé publique SSH de l\u0026rsquo;utilisateur distant à votre fichier ~/.ssh/authorized_keys, facilitant ainsi son accès autorisé à votre serveur. Il existe une option permettant d\u0026rsquo;indiquer à quel utilisateur appartient la clé.\nEn réponse à une invitation, utilisez wormhole ssh accept pour envoyer votre clé publique SSH de manière sécurisée. La commande est la suivante :\nMultiple public-keys found: 0: id_ed25519.pub 1: id_ed25519.pub Send which one?: Cette action anvoie votre clé publique SSH à l\u0026rsquo;expéditeur de l\u0026rsquo;invitation, lui permettant de vous ajouter facilement à son fichier authorized_keys.\nConclusion # Tout au long de cet article, nous avons exploré les diverses facettes de WormHole, un outil inestimable dans l\u0026rsquo;arsenal de tout administrateur système. De l\u0026rsquo;installation initiale à l\u0026rsquo;envoi sécurisé de clés SSH, WormHole se révèle être une solution robuste et fiable pour le transfert sécurisé de secrets.\nJe vous encourage à intégrer WormHole dans votre pratique et à expérimenter par vous-même la facilité et la sécurité qu\u0026rsquo;il apporte. N\u0026rsquo;oubliez pas de consulter les ressources ci-dessous pour rester à jour et maximiser l\u0026rsquo;utilisation de cet outil exceptionnel.\nWormHole n\u0026rsquo;est pas seulement un outil, c\u0026rsquo;est un compagnon de confiance dans votre quête constante pour un environnement sécurisé et efficace.\nPlus d\u0026rsquo;infos # Projet sur GitHub: GitHub - Magic Wormhole Documentation: Wormhole Docs ","date":"20 mai 2024","externalUrl":null,"permalink":"/posts/magic-wormhole.md/magic-wormhole/","section":"Posts","summary":"","title":"Wormhole: Transférer des Secrets","type":"posts"},{"content":"","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"}]